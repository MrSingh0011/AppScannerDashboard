export const sampleAppData = {
  id: "dp.ws.popcorntime",
  appInfo: {
    name: "Popcorn Time v3.6.10",
    packageName: "dp.ws.popcorntime",
    version: "3.6.10",
    size: "44.54MB",
    minSdk: 16,
    targetSdk: 29,
  },
  permissions: {
    dangerous: [
      {
        name: "android.permission.READ_EXTERNAL_STORAGE",
        protectionLevel: "dangerous",
        granted: true,
        description: "Allows the app to read from external storage",
      },
      {
        name: "android.permission.WRITE_EXTERNAL_STORAGE",
        protectionLevel: "dangerous",
        granted: true,
        description: "Allows the app to write to external storage",
      },
      {
        name: "android.permission.REQUEST_INSTALL_PACKAGES",
        protectionLevel: "dangerous",
        granted: true,
        description: "Allows the app to request package installation",
      },
    ],
    normal: [
      {
        name: "android.permission.INTERNET",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to access the internet",
      },
      {
        name: "android.permission.ACCESS_NETWORK_STATE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to view network connections",
      },
      {
        name: "android.permission.ACCESS_WIFI_STATE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to view Wi-Fi connections",
      },
      {
        name: "android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to request ignoring battery optimizations",
      },
      {
        name: "android.permission.CHANGE_WIFI_MULTICAST_STATE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to change Wi-Fi multicast state",
      },
      {
        name: "android.permission.CHANGE_WIFI_STATE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to change Wi-Fi state",
      },
      {
        name: "android.permission.FOREGROUND_SERVICE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to use foreground services",
      },
      {
        name: "android.permission.WAKE_LOCK",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to prevent phone from sleeping",
      },
      {
        name: "com.google.android.c2dm.permission.RECEIVE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to receive cloud-to-device messages",
      },
      {
        name: "com.google.android.finsky.permission.BIND_GET_INSTALL_REFERRER_SERVICE",
        protectionLevel: "normal",
        granted: true,
        description: "Allows the app to bind to install referrer service",
      },
    ],
    signature: [],
    all_count: 69,
    malware_prone_count: 25,
  },
  components: {
    activities: [],
    services: [
      {
        name: "se.popcorn_time.model.messaging.AppMessagingService",
        exported: true,
        enabled: true,
        warning: "Service is not Protected. An intent-filter exists.",
      },
    ],
    receivers: [
      {
        name: "se.popcorn_time.mobile.InstallReferrerReceiver",
        exported: true,
        enabled: true,
        warning: "Broadcast Receiver is not Protected. [android:exported=true]",
      },
      {
        name: "se.popcorn_time.base.receiver.ConnectivityReceiver",
        exported: true,
        enabled: true,
        warning: "Broadcast Receiver is not Protected. An intent-filter exists.",
      },
      {
        name: "se.popcorn_time.base.api.AppApiReceiver",
        exported: true,
        enabled: true,
        warning: "Broadcast Receiver is not Protected. [android:exported=true]",
      },
      {
        name: "com.google.firebase.iid.FirebaseInstanceIdReceiver",
        exported: true,
        enabled: true,
        warning: "Protected by a permission, but protection level should be checked.",
      },
    ],
    providers: [],
  },
  security: {
    vulnerabilities: [
      {
        id: "VUL-001",
        severity: "high",
        title: "Application signed with debug certificate",
        description: "Application signed with debug certificate",
        affectedComponent: "Certificate",
        recommendation: "Sign with a release certificate (not debug).",
      },
      {
        id: "VUL-002",
        severity: "high",
        title: "Application vulnerable to Janus Vulnerability (v1 signature)",
        description: "Application vulnerable to Janus Vulnerability (v1 signature)",
        affectedComponent: "Signature",
        recommendation: "Use v2/v3 signature schemes; avoid v1-only signing.",
      },
      {
        id: "VUL-003",
        severity: "high",
        title: "Clear text traffic is Enabled For App",
        description: "Clear text traffic is Enabled For App [android:usesCleartextTraffic=true]",
        affectedComponent: "Network Security",
        recommendation: "Disable cleartext traffic (enforce HTTPS).",
      },
      {
        id: "VUL-004",
        severity: "high",
        title: "App can be installed on vulnerable Android version",
        description: "App can be installed on a vulnerable unpatched Android version 4.1-4.1.2, [minSdk=16]",
        affectedComponent: "Manifest",
        recommendation: "Raise minSdk or drop support for very old Android versions.",
      },
      {
        id: "VUL-005",
        severity: "high",
        title: "Native libs missing stack canaries / not fortified",
        description: "Native libs missing stack canaries / not fortified",
        affectedComponent: "Native Libraries",
        recommendation: "Enable stack canaries and -D_FORTIFY_SOURCE in native builds.",
      },
    ],
    networkSecurity: {
      cleartextTrafficPermitted: true,
      certificatePinning: false,
      trustUserCerts: false,
    },
    certificateInfo: {
      issuer: "Debug Certificate",
      subject: "Debug Certificate",
      validFrom: "Unknown",
      validTo: "Unknown",
      signatureAlgorithm: "Unknown",
      fingerprint: "Debug",
    },
    riskScore: 85,
    manifestFindings: {
      high: 2,
      warning: 5,
      info: 0,
    },
    certificateSummary: {
      high: 1,
      warning: 1,
      info: 1,
    },
  },
  binaries: [
    {
      name: "lib/arm64-v8a/libjlibtorrent.so",
      stack_canary: false,
      fortify: false,
      notes: "No stack canary detected (high risk).",
    },
    {
      name: "lib/x86/libjlibtorrent.so",
      stack_canary: true,
      fortify: false,
      notes: "NX, PIE, Full RELRO present; fortify absent.",
    },
    {
      name: "lib/armeabi-v7a/libanw.14.so",
      stack_canary: false,
      fortify: false,
      notes: "Missing stack canary and fortify in many armeabi binaries.",
    },
  ],
  dependencies: [],
  metadata: {
    scanDate: new Date().toISOString(),
    scanDuration: 8500,
    scannerVersion: "4.0.1",
    shortSummary: "Debug-signed APK (v1 sig) with cleartext enabled, supports minSdk=16, several exported components and dangerous permissions (storage, install). Native libs show mixed protections (NX/PIE/RELRO present; many lack stack canaries/fortify).",
    recommendations: [
      "Sign with a release certificate (not debug).",
      "Use v2/v3 signature schemes; avoid v1-only signing.",
      "Disable cleartext traffic (enforce HTTPS).",
      "Raise minSdk or drop support for very old Android versions.",
      "Restrict exported components and validate permissions.",
      "Enable stack canaries and -D_FORTIFY_SOURCE in native builds.",
    ],
  },
}

// Multiple apps for scalability demonstration
export const multipleApps = [sampleAppData]
